@model StudentNav.Models.UploadBlogPostViewModel

@{
    ViewBag.Title = "Blog";
}

<h2>Create BlogPost</h2>


@using (Html.BeginForm("Create", "BlogPosts", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
      
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 forml">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            @Html.LabelFor(model => model.MediaFiles, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" multiple="multiple" id="MediaFiles" name="MediaFiles" required accept="images/*" />
                @Html.ValidationMessageFor(model => model.MediaFiles, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn paper-raise" />
            </div>
        </div>
    </div>
}

<script>
        var slider = document.getElementById("home-slider");
        slider.setAttribute("class", "disappear");
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
